server:
  port: 8080

spring:
  application:
    name: writerregistration

# 각자 경로에 맞게 수정
external:
  user-service:
    url: https://8083-meritending-aipublish1-blcu0ny39t8.ws-us120.gitpod.io
---

spring:
  profiles: default
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: writerregistration
#<<< EDA / Topic Name
          destination: aipublish
#>>> EDA / Topic Name
          contentType: application/json
        event-out:
#<<< EDA / Topic Name
          destination: aipublish
#>>> EDA / Topic Name
          contentType: application/json

logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug


server:
  port: 8082

---

spring:
  profiles: docker
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
  cloud:
    stream:
      kafka:
        binder:
          brokers: my-kafka:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: writerregistration
          destination: aipublish
          contentType: application/json
        event-out:
          destination: aipublish
          contentType: application/json

